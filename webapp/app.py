from fastapi import FastAPI, Request, HTTPException
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import List, Optional
import json
import os

app = FastAPI()

# Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Allows all origins
    allow_credentials=True,
    allow_methods=["*"],  # Allows all methods
    allow_headers=["*"],  # Allows all headers
)

# Mount static files
app.mount("/static", StaticFiles(directory="static"), name="static")

# Templates
templates = Jinja2Templates(directory="templates")

class QuizAnswer(BaseModel):
    question_id: int
    answer: str

class QuizSubmission(BaseModel):
    user_id: str
    lesson_id: int
    answers: List[QuizAnswer]
    completion_time: int

@app.get("/")
async def home():
    """Home page"""
    return {"message": "Meditation Course WebApp", "status": "ruing"}


# Lesson content
LESSONS = {
    1: {
        "title": "–û—Å–Ω–æ–≤—ã –º–µ–¥–∏—Ç–∞—Ü–∏–∏",
        "subtitle": "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏",
        "content": """
        <h3>–ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ–¥–∏—Ç–∞—Ü–∏—è?</h3>
        <p>–ú–µ–¥–∏—Ç–∞—Ü–∏—è ‚Äî —ç—Ç–æ –¥—Ä–µ–≤–Ω—è—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –¥–æ—Å—Ç–∏—á—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–∫–æ—è –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏. –≠—Ç–æ –Ω–µ –ø–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∏—Ç—å —É–º –æ—Ç –º—ã—Å–ª–µ–π, –∞ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—é –∑–∞ –Ω–∏–º–∏ –±–µ–∑ —Å—É–∂–¥–µ–Ω–∏—è.</p>
        
        <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã</h3>
        <ul>
            <li><strong>–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å</strong> ‚Äî –ø–æ–ª–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –º–æ–º–µ–Ω—Ç–µ</li>
            <li><strong>–ü—Ä–∏–Ω—è—Ç–∏–µ</strong> ‚Äî –±–µ–∑—É—Å–ª–æ–≤–Ω–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç</li>
            <li><strong>–¢–µ—Ä–ø–µ–Ω–∏–µ</strong> ‚Äî –ø–æ–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ</li>
            <li><strong>–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å</strong> ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤–∞–∂–Ω–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
        </ul>
        
        <h3>–ü–æ–ª—å–∑–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</h3>
        <div class="benefits">
            <div class="benefit-item">
                <strong>–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞</strong>
                <p>–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞ ‚Äî –≥–æ—Ä–º–æ–Ω–∞ —Å—Ç—Ä–µ—Å—Å–∞</p>
            </div>
            <div class="benefit-item">
                <strong>–£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏</strong>
                <p>–¢—Ä–µ–Ω–∏—Ä—É–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ</p>
            </div>
            <div class="benefit-item">
                <strong>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ</strong>
                <p>–ü–æ–º–æ–≥–∞–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ—Ü–∏—è–º–∏ –∏ —Ä–µ–∞–∫—Ü–∏—è–º–∏</p>
            </div>
            <div class="benefit-item">
                <strong>–õ—É—á—à–∏–π —Å–æ–Ω</strong>
                <p>–£—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–¥ —Å–Ω–æ–º</p>
            </div>
        </div>
        
        <h3>–ü–µ—Ä–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞: –î—ã—Ö–∞–Ω–∏–µ</h3>
        <p>–ù–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:</p>
        <ol>
            <li>–ù–∞–π–¥–∏ —É–¥–æ–±–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–¥—è</li>
            <li>–ó–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏–ª–∏ –º—è–≥–∫–æ —Å—Ñ–æ–∫—É—Å–∏—Ä—É–π –≤–∑–≥–ª—è–¥</li>
            <li>–ù–∞—á–Ω–∏ –∑–∞–º–µ—á–∞—Ç—å —Å–≤–æ–µ –¥—ã—Ö–∞–Ω–∏–µ</li>
            <li>–ù–µ –ø—ã—Ç–∞–π—Å—è –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞–π</li>
            <li>–ö–æ–≥–¥–∞ —É–º –æ—Ç–≤–ª–µ—á–µ—Ç—Å—è, –º—è–≥–∫–æ –≤–µ—Ä–Ω–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥—ã—Ö–∞–Ω–∏—é</li>
        </ol>
        
        <div class="meditation-timer">
            <h4>–ü–æ–ø—Ä–æ–±—É–π —Å–µ–π—á–∞—Å: 3-–º–∏–Ω—É—Ç–Ω–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è</h4>
            <button id="start-meditation" class="meditation-btn">üßò‚Äç‚ôÄÔ∏è –ù–∞—á–∞—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏—é</button>
            <div id="timer" class="timer hidden">
                <div class="timer-display">3:00</div>
                <div class="timer-instruction">–ù–∞–±–ª—é–¥–∞–π –∑–∞ –¥—ã—Ö–∞–Ω–∏–µ–º...</div>
            </div>
        </div>
        """,
        "quiz": [
            {
                "id": 1,
                "question": "–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é –º–µ–¥–∏—Ç–∞—Ü–∏–∏?",
                "options": [
                    "–û—á–∏—Å—Ç–∏—Ç—å —É–º –æ—Ç –≤—Å–µ—Ö –º—ã—Å–ª–µ–π",
                    "–ù–∞—É—á–∏—Ç—å—Å—è –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —É–º–æ–º –±–µ–∑ —Å—É–∂–¥–µ–Ω–∏—è",
                    "–î–æ—Å—Ç–∏—á—å —ç–∫—Å—Ç–∞–∑–∞ –∏ –±–ª–∞–∂–µ–Ω—Å—Ç–≤–∞"
                ],
                "correct": 1
            },
            {
                "id": 2,
                "question": "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ—Ç–≤–ª–µ–∫—Å—è?",
                "options": [
                    "–†–∞—Å—Å—Ç—Ä–æ–∏—Ç—å—Å—è –∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É",
                    "–ë–æ—Ä–æ—Ç—å—Å—è —Å –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–º–∏ –º—ã—Å–ª—è–º–∏",
                    "–ú—è–≥–∫–æ –≤–µ—Ä–Ω—É—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥—ã—Ö–∞–Ω–∏—é"
                ],
                "correct": 2
            },
            {
                "id": 3,
                "question": "–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞?",
                "options": [
                    "–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ —á–∞—Å—É",
                    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ö–æ—Ç—è –±—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç",
                    "–¢–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
                ],
                "correct": 1
            }
        ]
    },
    2: {
        "title": "–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏",
        "subtitle": "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–æ–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ –¥—ã—Ö–∞–Ω–∏—è",
        "content": """
        <h3>–î—ã—Ö–∞–Ω–∏–µ –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</h3>
        <p>–î—ã—Ö–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –º–æ—Å—Ç –º–µ–∂–¥—É —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–º –∏ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–º, –º–µ–∂–¥—É —Ç–µ–ª–æ–º –∏ —É–º–æ–º. –ò–∑—É—á–∞—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è, –º—ã –ø–æ–ª—É—á–∞–µ–º –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.</p>
        
        <div class="video-container">
            <h4>–í–∏–¥–µ–æ-—É—Ä–æ–∫: –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è</h4>
            <div class="video-placeholder">
                <div class="video-play-btn">‚ñ∂Ô∏è</div>
                <p>–í–∏–¥–µ–æ-—É—Ä–æ–∫ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p>
                <small>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 8 –º–∏–Ω—É—Ç</small>
            </div>
        </div>
        
        <h3>–¢–µ—Ö–Ω–∏–∫–∞ "4-7-8"</h3>
        <p>–≠—Ç–∞ —Ç–µ—Ö–Ω–∏–∫–∞ –æ—Å–æ–±–µ–Ω–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞ –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è –∏ –∑–∞—Å—ã–ø–∞–Ω–∏—è:</p>
        <ol>
            <li><strong>–í–¥–æ—Ö –Ω–∞ 4 —Å—á–µ—Ç–∞</strong> —á–µ—Ä–µ–∑ –Ω–æ—Å</li>
            <li><strong>–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 7 —Å—á–µ—Ç–æ–≤</strong></li>
            <li><strong>–í—ã–¥–æ—Ö –Ω–∞ 8 —Å—á–µ—Ç–æ–≤</strong> —á–µ—Ä–µ–∑ —Ä–æ—Ç</li>
            <li>–ü–æ–≤—Ç–æ—Ä–∏ —Ü–∏–∫–ª 4-8 —Ä–∞–∑</li>
        </ol>
        
        <div class="breathing-guide">
            <h4>–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –∞—É–¥–∏–æ-–≥–∏–¥–æ–º</h4>
            <div class="audio-controls">
                <button id="start-breathing" class="breathing-btn">üåä –ù–∞—á–∞—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É</button>
                <div id="breathing-guide" class="breathing-display hidden">
                    <div class="breathing-circle"></div>
                    <div class="breathing-instruction">–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Å—è...</div>
                    <div class="breathing-counter">–¶–∏–∫–ª 1 –∏–∑ 4</div>
                </div>
            </div>
        </div>
        
        <h3>–ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏</h3>
        <p>–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ –∑–≤—É–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –≥–ª—É–±–∂–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</p>
        
        <div class="nature-sounds">
            <div class="sound-option" data-sound="rain">
                <div class="sound-icon">üåßÔ∏è</div>
                <h4>–ó–≤—É–∫ –¥–æ–∂–¥—è</h4>
                <p>–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–π —à—É–º –¥–æ–∂–¥—è</p>
                <button class="play-sound">–°–ª—É—à–∞—Ç—å</button>
            </div>
            <div class="sound-option" data-sound="ocean">
                <div class="sound-icon">üåä</div>
                <h4>–û–∫–µ–∞–Ω—Å–∫–∏–µ –≤–æ–ª–Ω—ã</h4>
                <p>–†–∏—Ç–º–∏—á–Ω—ã–π —à—É–º –ø—Ä–∏–±–æ—è</p>
                <button class="play-sound">–°–ª—É—à–∞—Ç—å</button>
            </div>
            <div class="sound-option" data-sound="forest">
                <div class="sound-icon">üå≤</div>
                <h4>–ó–≤—É–∫–∏ –ª–µ—Å–∞</h4>
                <p>–ü–µ–Ω–∏–µ –ø—Ç–∏—Ü –∏ —à–µ–ª–µ—Å—Ç –ª–∏—Å—Ç—å–µ–≤</p>
                <button class="play-sound">–°–ª—É—à–∞—Ç—å</button>
            </div>
        </div>
        
        <h3>–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π</h3>
        <p>–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–∏–ª–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –º–µ–¥–∏—Ç–∞—Ü–∏–∏:</p>
        <div class="visualization-guide">
            <p><strong>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ "–ó–æ–ª–æ—Ç–æ–π —Å–≤–µ—Ç":</strong></p>
            <ol>
                <li>–ó–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å —Ç–µ–ø–ª—ã–π –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π —Å–≤–µ—Ç</li>
                <li>–≠—Ç–æ—Ç —Å–≤–µ—Ç –≤—Ö–æ–¥–∏—Ç –≤ —Ç–µ–±—è —Å –∫–∞–∂–¥—ã–º –≤–¥–æ—Ö–æ–º</li>
                <li>–°–≤–µ—Ç –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —Ç–≤–æ–µ —Ç–µ–ª–æ, –ø—Ä–∏–Ω–æ—Å—è –ø–æ–∫–æ–π</li>
                <li>–° –≤—ã–¥–æ—Ö–æ–º –æ—Ç–ø—É—Å–∫–∞–π –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ —Ç—Ä–µ–≤–æ–≥–∏</li>
            </ol>
        </div>
        """,
        "quiz": [
            {
                "id": 1,
                "question": "–í —Ç–µ—Ö–Ω–∏–∫–µ –¥—ã—Ö–∞–Ω–∏—è '4-7-8' –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Å—á–µ—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è –≤–¥–æ—Ö?",
                "options": ["4", "7", "8"],
                "correct": 0
            },
            {
                "id": 2,
                "question": "–ö–∞–∫–∏–µ –∑–≤—É–∫–∏ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏?",
                "options": [
                    "–ì—Ä–æ–º–∫–∞—è –º—É–∑—ã–∫–∞",
                    "–ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã", 
                    "–†–µ—á—å –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã"
                ],
                "correct": 1
            },
            {
                "id": 3,
                "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ –º–µ–¥–∏—Ç–∞—Ü–∏–∏?",
                "options": [
                    "–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–∞–∫—Ç–∏–∫–∏",
                    "–°–æ–∑–¥–∞–Ω–∏–µ –º—ã—Å–ª–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞",
                    "–†–∏—Å–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –º–µ–¥–∏—Ç–∞—Ü–∏–∏"
                ],
                "correct": 1
            }
        ]
    }
}

@app.get("/lesson/{lesson_id}", response_class=HTMLResponse)
async def get_lesson(request: Request, lesson_id: int):
    """Get lesson page"""
    if lesson_id not in LESSONS:
        raise HTTPException(status_code=404, detail="Lesson not found")
    
    lesson = LESSONS[lesson_id]
    return templates.TemplateResponse("lesson.html", {
        "request": request,
        "lesson_id": lesson_id,
        "lesson": lesson
    })

@app.post("/api/submit-quiz")
async def submit_quiz(request: Request):
    """Submit quiz answers"""
    print("=== –ü–û–õ–£–ß–ï–ù –ó–ê–ü–†–û–° –ù–ê /api/submit-quiz ===")

    try:
        # Read raw request data
        body = await request.body()
        print(f"RAW BODY: {body}")

        if not body:
            print("–û–®–ò–ë–ö–ê: –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ!")
            raise HTTPException(status_code=400, detail="Empty request body")

        # Parse JSON manually
        import json
        data = json.loads(body.decode('utf-8'))
        print(f"PARSED DATA: {data}")

        # Create QuizSubmission from parsed data
        submission = QuizSubmission(**data)
        print(f"SUBMISSION CREATED: user={submission.user_id}, lesson={submission.lesson_id}")
        print(f"ANSWERS: {submission.answers}")

        lesson = LESSONS.get(submission.lesson_id)
        if not lesson:
            print(f"–û–®–ò–ë–ö–ê: –£—Ä–æ–∫ {submission.lesson_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            raise HTTPException(status_code=404, detail="Lesson not found")

        print(f"–£–†–û–ö –ù–ê–ô–î–ï–ù: {lesson['title']}")

    except Exception as e:
        print(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {type(e).__name__}: {str(e)}")
        import traceback
        print(f"TRACEBACK: {traceback.format_exc()}")
        raise HTTPException(status_code=500, detail=f"Server error: {str(e)}")

    # Calculate score
    correct_answers = 0
    total_questions = len(lesson["quiz"])

    for answer in submission.answers:
        question = next((q for q in lesson["quiz"] if q["id"] == answer.question_id), None)
        if question and question["options"][question["correct"]] == answer.answer:
            correct_answers += 1

    score = correct_answers
    percentage = (correct_answers / total_questions) * 100

    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {score}/{total_questions} ({percentage}%)")

    # Here you would normally save to database
    # For demo, we'll just return the result

    return JSONResponse({
        "success": True,
        "score": score,
        "total": total_questions,
        "percentage": percentage,
        "message": get_score_message(percentage),
        "lesson_completed": True,
        "lesson_id": submission.lesson_id
    })

def get_score_message(percentage: float) -> str:
    """Get message based on score percentage"""
    if percentage >= 100:
        return "üåü –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –¢—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å–≤–æ–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª!"
    elif percentage >= 80:
        return "üéâ –û—Ç–ª–∏—á–Ω–æ! –¢—ã —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –≤ —Ç–µ–º–µ!"
    elif percentage >= 60:
        return "üëç –•–æ—Ä–æ—à–æ! –ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –æ—Å–Ω–æ–≤—ã —É—Å–≤–æ–µ–Ω—ã!"
    else:
        return "üìö –°—Ç–æ–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª —É—Ä–æ–∫–∞ –µ—â–µ —Ä–∞–∑!"

@app.get("/api/lesson/{lesson_id}/progress")
async def get_lesson_progress(lesson_id: int, user_id: str):
    """Get user progress for lesson"""
    # In real app, fetch from database
    return JSONResponse({
        "completed": False,
        "score": None,
        "time_spent": 0
    })

# Simple in-memory storage for demo
completed_lessons = {}

class LessonCompletionRequest(BaseModel):
    user_id: str
    score: int
    percentage: float

@app.post("/api/lesson/{lesson_id}/complete")
async def complete_lesson(lesson_id: int, request: LessonCompletionRequest):
    """Mark lesson as completed"""
    print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞ {lesson_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {request.user_id}")

    completed_lessons[f"{request.user_id}_{lesson_id}"] = {
        "lesson_id": lesson_id,
        "score": request.score,
        "percentage": request.percentage,
        "completed_at": "2024-01-01"  # Demo timestamp
    }

    print(f"–£—Ä–æ–∫ {lesson_id} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {request.user_id}")

    print(completed_lessons)
    return JSONResponse({
        "success": True,
        "message": "Lesson marked as completed"
    })

@app.get("/api/lesson/{lesson_id}/check_completion")
async def check_lesson_completion(lesson_id: int, user_id: str = ""):
    """Check if lesson is completed by user"""
    if not user_id:
        return JSONResponse({"completed": False})

    key = f"{user_id}_{lesson_id}"
    completion_data = completed_lessons.get(key)

    if completion_data:
        return JSONResponse({
            "completed": True,
            "score": completion_data["score"],
            "percentage": completion_data["percentage"]
        })
    else:
        return JSONResponse({"completed": False})

# Catch all other routes (put at the end)
@app.get("/{filename}")
async def catch_static_files(filename: str):
    """Catch requests for missing static files"""
    if filename.endswith(('.js', '.css', '.map', '.png', '.jpg', '.ico')):
        raise HTTPException(status_code=404, detail=f"Static file not found: {filename}")
    raise HTTPException(status_code=404, detail="Page not found")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
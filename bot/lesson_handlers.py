import asyncio
import random
from aiogram import Router, F
from aiogram.types import CallbackQuery
from data_manager import data_manager
from bot.keyboards import *

router = Router()

# Gift content
GIFTS = {
    "gift_1": {
        "name": "üéµ –ó–≤—É–∫–∏ –¥–æ–∂–¥—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏",
        "description": "10-–º–∏–Ω—É—Ç–Ω–∞—è –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å –∑–≤—É–∫–æ–≤ –¥–æ–∂–¥—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è",
        "coins": 50
    },
    "gift_2": {
        "name": "üìñ –ú–∏–Ω–∏-—É—Ä–æ–∫ –æ —á–∞–∫—Ä–∞—Ö", 
        "description": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–∫ –æ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–∞—Ö –∏ –∏—Ö –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ",
        "coins": 30
    },
    "gift_3": {
        "name": "ü™ô –ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–µ –º–æ–Ω–µ—Ç—ã",
        "description": "100 –±–æ–Ω—É—Å–Ω—ã—Ö –º–æ–Ω–µ—Ç –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
        "coins": 100
    }
}

@router.callback_query(F.data.startswith("lesson_complete_"))
async def lesson_complete_handler(callback: CallbackQuery):
    """Handle lesson completion from webapp"""
    lesson_id = int(callback.data.split("_")[-1])
    user_id = str(callback.from_user.id)
    
    # Add achievement for first lesson
    if lesson_id == 1:
        achievement_added = await data_manager.add_achievement(user_id, "first_lesson")
        if achievement_added:
            await callback.answer("üéì –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: –ü–µ—Ä–≤—ã–π —É—Ä–æ–∫!", show_alert=True)
    
    congratulations = f"""
üéâ **–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —É—Ä–æ–∫–∞ {lesson_id}!**

–¢—ã —Å–¥–µ–ª–∞–ª –≤–∞–∂–Ω—ã–π —à–∞–≥ –Ω–∞ –ø—É—Ç–∏ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏! 
–¢–≤–æ—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ —É–∂–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø–æ–ª—å–∑—É.

üí´ **–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:**
‚Ä¢ –ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–≤—è–∑–∏ –≤ –º–æ–∑–≥–µ —É–∫—Ä–µ–ø–∏–ª–∏—Å—å
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ —Å–Ω–∏–∑–∏–ª—Å—è
‚Ä¢ –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –ø–æ–≤—ã—Å–∏–ª–∞—Å—å

üéÅ **–í—Ä–µ–º—è –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞!**
–ó–∞ —Ç–≤–æ–∏ —Å—Ç–∞—Ä–∞–Ω–∏—è —Ç—ã –∑–∞—Å–ª—É–∂–∏–ª –Ω–∞–≥—Ä–∞–¥—É.
–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –ø–æ–¥–∞—Ä–∫–æ–≤:
"""
    
    await callback.message.answer(
        text=congratulations,
        reply_markup=get_gift_selection_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("gift_"))
async def gift_selection_handler(callback: CallbackQuery):
    """Handle gift selection"""
    gift_id = callback.data
    user_id = str(callback.from_user.id)
    
    gift = GIFTS[gift_id]
    
    # Add gift to user data and coins
    await data_manager.add_coins(user_id, gift["coins"])
    user_data = await data_manager.get_user(user_id)
    user_data.setdefault("gifts_received", []).append(gift_id)
    await data_manager.update_user(user_id, user_data)
    
    gift_text = f"""
üéÅ **–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!**

–¢—ã –ø–æ–ª—É—á–∏–ª: **{gift["name"]}**

{gift["description"]}

üí∞ **+{gift["coins"]} –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–µ—Ç**
ü™ô **–í—Å–µ–≥–æ –º–æ–Ω–µ—Ç:** {user_data.get('coins', 0) + gift["coins"]}

‚ú® –ü–æ–¥–∞—Ä–∫–∏ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –≥–ª—É–±–∂–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –ø—Ä–∞–∫—Ç–∏–∫—É –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –ø–æ–ª—å–∑—ã!

**–ß—Ç–æ –¥–∞–ª—å—à–µ?**
–ú–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞.
"""
    
    await callback.message.edit_text(
        text=gift_text,
        reply_markup=get_continue_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "continue_now")
async def continue_now_handler(callback: CallbackQuery):
    """Continue with next lesson immediately"""
    user_id = str(callback.from_user.id)
    user_data = await data_manager.get_user(user_id)
    current_lesson = user_data.get('current_lesson', 1)
    
    if current_lesson == 2:
        next_lesson_text = """
üé• **–£—Ä–æ–∫ 2: –ü—Ä–∞–∫—Ç–∏–∫–∞ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫**

–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –º–∏—Ä –º–µ–¥–∏—Ç–∞—Ü–∏–∏.

–í–æ –≤—Ç–æ—Ä–æ–º —É—Ä–æ–∫–µ —Ç—ã:
‚Ä¢ –ò–∑—É—á–∏—à—å —Ç–µ—Ö–Ω–∏–∫—É "4-7-8" –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—à—å –≤–∏–¥–µ–æ —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏  
‚Ä¢ –ù–∞—É—á–∏—à—å—Å—è –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã
‚Ä¢ –û—Å–≤–æ–∏—à—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–∫–æ—è

‚è±Ô∏è **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** 10-12 –º–∏–Ω—É—Ç
üéØ **–°–ª–æ–∂–Ω–æ—Å—Ç—å:** –ë–∞–∑–æ–≤–∞—è
üéµ **–í–∫–ª—é—á–∞–µ—Ç:** –í–∏–¥–µ–æ + –∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã

–ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏?
"""
        
        await callback.message.edit_text(
            text=next_lesson_text,
            reply_markup=get_lesson2_keyboard(),
            parse_mode="Markdown"
        )
    else:
        await show_payment_screen(callback)

@router.callback_query(F.data == "remind_tomorrow")
async def remind_tomorrow_handler(callback: CallbackQuery):
    """Set reminder for tomorrow (demo version)"""
    await callback.message.edit_text(
        text="""
‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!**

–ó–∞–≤—Ç—Ä–∞ –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è —è –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–∞.

üßò‚Äç‚ôÄÔ∏è **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞ –ø–æ–ø—Ä–æ–±—É–π –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑—É—á–µ–Ω–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –¥—ã—Ö–∞–Ω–∏—è:
‚Ä¢ –£—Ç—Ä–æ–º –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è (5 –º–∏–Ω—É—Ç)
‚Ä¢ –í–µ—á–µ—Ä–æ–º –ø–µ—Ä–µ–¥ —Å–Ω–æ–º (5 –º–∏–Ω—É—Ç)
‚Ä¢ –í –º–æ–º–µ–Ω—Ç—ã —Å—Ç—Ä–µ—Å—Å–∞ (2-3 –º–∏–Ω—É—Ç—ã)

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –∑–∞–≤—Ç—Ä–∞! üëã

---
üìù **–î–µ–º–æ-—Ä–µ–∂–∏–º:** –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–∏–¥–µ—Ç —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É, –∞ –Ω–µ –∑–∞–≤—Ç—Ä–∞.
""",
        parse_mode="Markdown"
    )
    
    # Demo reminder after 1 minute
    await asyncio.sleep(60)
    
    remind_text = """
üîî **–í—Ä–µ–º—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏!**

–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –æ–±–µ—â–∞–ª, –Ω–∞–ø–æ–º–∏–Ω–∞—é –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏.

üåÖ **–ù–æ–≤—ã–π –¥–µ–Ω—å - –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!**
–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏?

–í–æ –≤—Ç–æ—Ä–æ–º —É—Ä–æ–∫–µ —Ç–µ–±—è –∂–¥–µ—Ç:
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤–∏–¥–µ–æ —Å —Ç–µ—Ö–Ω–∏–∫–∞–º–∏ –¥—ã—Ö–∞–Ω–∏—è
‚Ä¢ –ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏
‚Ä¢ –ë–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

–ù–∞—á–Ω–µ–º? üöÄ
"""
    
    await callback.message.answer(
        text=remind_text,
        reply_markup=get_lesson2_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("lesson2_complete"))
async def lesson2_complete_handler(callback: CallbackQuery):
    """Handle lesson 2 completion"""
    user_id = str(callback.from_user.id)
    
    # Add quiz master achievement
    await data_manager.add_achievement(user_id, "quiz_master")
    
    completion_text = """
üåü **–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –£—Ä–æ–∫ 2 –∑–∞–≤–µ—Ä—à–µ–Ω!**

–¢—ã –æ—Å–≤–æ–∏–ª –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏!

üìà **–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å:**
‚úÖ –û—Å–Ω–æ–≤—ã –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏–∑—É—á–µ–Ω—ã
‚úÖ –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ—Å–≤–æ–µ–Ω—ã  
‚úÖ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å–æ –∑–≤—É–∫–∞–º–∏ –ø—Ä–∏—Ä–æ–¥—ã
‚úÖ 2/3 —É—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ

üéä **–í–≤–æ–¥–Ω–∞—è —á–∞—Å—Ç—å –∫—É—Ä—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**

–¢—ã –ø–æ–ª—É—á–∏–ª –∫—Ä–µ–ø–∫—É—é –æ—Å–Ω–æ–≤—É –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏. –ù–æ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏!

üíé **–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∫–ª—é—á–∞–µ—Ç:**
‚Ä¢ 15+ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø—Ä–∞–∫—Ç–∏–∫–∏
‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫—É –∑–≤—É–∫–æ–≤ (500+ –∑–∞–ø–∏—Å–µ–π)
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞

–•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é?
"""
    
    await callback.message.answer(
        text=completion_text,
        reply_markup=get_payment_keyboard(),
        parse_mode="Markdown"
    )

async def show_payment_screen(callback: CallbackQuery):
    """Show payment options"""
    payment_text = """
üíé **–í—Ä–µ–º—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!**

–í–≤–æ–¥–Ω–∞—è —á–∞—Å—Ç—å –∫—É—Ä—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢—ã —É–∂–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å–∏–ª—É –º–µ–¥–∏—Ç–∞—Ü–∏–∏!

**–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å "–ü—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏" –≤–∫–ª—é—á–∞–µ—Ç:**

üßò‚Äç‚ôÄÔ∏è **15+ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Ä–æ–∫–æ–≤:**
‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ü–∏—è –ª—é–±—è—â–µ–π –¥–æ–±—Ä–æ—Ç—ã
‚Ä¢ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–∞
‚Ä¢ –•–æ–¥—è—á–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è
‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ü–∏—è –≤ –¥–≤–∏–∂–µ–Ω–∏–∏
‚Ä¢ –¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏

üéµ **–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–≤—É–∫–æ–≤ (500+ –∑–∞–ø–∏—Å–µ–π):**
‚Ä¢ –ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã –≤ HD –∫–∞—á–µ—Å—Ç–≤–µ
‚Ä¢ –ë–∏–Ω–∞—É—Ä–∞–ª—å–Ω—ã–µ –±–∏—Ç—ã –¥–ª—è –≥–ª—É–±–æ–∫–æ–π –º–µ–¥–∏—Ç–∞—Ü–∏–∏
‚Ä¢ –ú–∞–Ω—Ç—Ä—ã –∏ –ø–æ—é—â–∏–µ —á–∞—à–∏
‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–∞—è –º—É–∑—ã–∫–∞

üì± **–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∞–∫—Ç–∏–∫–µ
‚Ä¢ –°–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏—Ö
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏

üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å:** 590‚ÇΩ (–≤–º–µ—Å—Ç–æ 1990‚ÇΩ)
‚≠ê **–ò–ª–∏:** 150 Telegram Stars

–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
"""
    
    await callback.message.answer(
        text=payment_text,
        reply_markup=get_payment_keyboard(),
        parse_mode="Markdown"
    )
from aiogram import Router, F
from aiogram.types import CallbackQuery, LabeledPrice, PreCheckoutQuery, Message
from aiogram.types.input_media import InputMedia
from data_manager import data_manager
from bot.keyboards import get_back_keyboard
import random

router = Router()

@router.callback_query(F.data == "about_full_course")
async def about_full_course_handler(callback: CallbackQuery):
    """Show information about full course"""
    course_info = """
üíé **–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å "–ü—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏"**

**üìö –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ (–ø–æ–ª–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞):**

**–ú–æ–¥—É–ª—å 1: –û—Å–Ω–æ–≤—ã (—É–∂–µ –ø—Ä–æ–π–¥–µ–Ω) ‚úÖ**
‚Ä¢ –í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–µ–¥–∏—Ç–∞—Ü–∏—é
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
‚Ä¢ –ü–µ—Ä–≤—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

**–ú–æ–¥—É–ª—å 2: –£–≥–ª—É–±–ª–µ–Ω–∏–µ**
‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ü–∏—è –ª—é–±—è—â–µ–π –¥–æ–±—Ä–æ—Ç—ã
‚Ä¢ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–∞
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å —ç–º–æ—Ü–∏—è–º–∏
‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

**–ú–æ–¥—É–ª—å 3: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏**
‚Ä¢ –•–æ–¥—è—á–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è
‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ü–∏—è –≤ –¥–≤–∏–∂–µ–Ω–∏–∏
‚Ä¢ –¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å —á–∞–∫—Ä–∞–º–∏

**–ú–æ–¥—É–ª—å 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è**
‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ü–∏—è –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏
‚Ä¢ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏

**üéÅ –ë–æ–Ω—É—Å—ã:**
‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–∑ 500+ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ—É—á-–±–æ—Ç
‚Ä¢ –î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏

**üí´ –†–µ–∑—É–ª—å—Ç–∞—Ç:**
–ß–µ—Ä–µ–∑ 30 –¥–Ω–µ–π —É —Ç–µ–±—è –±—É–¥–µ—Ç —É—Å—Ç–æ–π—á–∏–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏.

**–°—Ç–æ–∏–º–æ—Å—Ç—å:** 590‚ÇΩ (—Å–∫–∏–¥–∫–∞ 70% —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!)
"""
    
    await callback.message.edit_text(
        text=course_info,
        reply_markup=get_back_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "pay_card")
async def pay_card_handler(callback: CallbackQuery):
    """Handle card payment"""
    prices = [LabeledPrice(label="–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –º–µ–¥–∏—Ç–∞—Ü–∏–∏", amount=59000)]  # 590.00 —Ä—É–±–ª–µ–π
    
    await callback.message.answer_invoice(
        title="–ü—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏",
        description="–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –º–µ–¥–∏—Ç–∞—Ü–∏–∏ —Å 15+ —É—Ä–æ–∫–∞–º–∏, –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –∑–≤—É–∫–æ–≤ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º",
        payload="meditation_course_full",
        provider_token="1744374395:TEST:c2588a53275e15616b46",
        currency="RUB",
        prices=prices,
        start_parameter="meditation_course",
        photo_url="https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400",
        photo_width=400,
        photo_height=300
    )

@router.callback_query(F.data == "pay_stars")
async def pay_stars_handler(callback: CallbackQuery):
    """Handle Telegram Stars payment"""
    prices = [LabeledPrice(label="–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –º–µ–¥–∏—Ç–∞—Ü–∏–∏", amount=150)]  # 150 stars
    
    await callback.message.answer_invoice(
        title="–ü—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏ ‚≠ê",
        description="–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç–∞ Telegram Stars",
        payload="meditation_course_stars",
        provider_token="",  # Empty for stars
        currency="XTR",  # Telegram Stars currency
        prices=prices,
        start_parameter="meditation_course_stars",
        photo_url="https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400",
        photo_width=400,
        photo_height=300
    )

@router.pre_checkout_query()
async def pre_checkout_handler(query: PreCheckoutQuery):
    """Handle pre-checkout query"""
    await query.answer(ok=True)

@router.message(F.successful_payment)
async def successful_payment_handler(message: Message):
    """Handle successful payment"""
    user_id = str(message.from_user.id)
    payment = message.successful_payment
    
    # Update user payment status
    await data_manager.update_user(user_id, {"payment_status": "paid"})
    await data_manager.add_achievement(user_id, "course_complete")
    await data_manager.add_coins(user_id, 500)  # Bonus coins
    
    success_images = [
        "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800",
        "https://images.unsplash.com/photo-1515279035982-b2b9e5ad2e53?w=800"
    ]
    
    success_text = f"""
üéâ **–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!**

**‚úÖ –î–µ—Ç–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:**
‚Ä¢ –°—É–º–º–∞: {payment.total_amount // 100 if payment.currency == 'RUB' else payment.total_amount} {payment.currency}
‚Ä¢ ID: {payment.telegram_payment_charge_id}

**üéÅ –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏–ª:**
‚ú® –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º 15+ —É—Ä–æ–∫–∞–º –∫—É—Ä—Å–∞
‚ú® –ë–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–∑ 500+ –∑–≤—É–∫–æ–≤ –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏
‚ú® –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ—É—á-–±–æ—Ç–∞
‚ú® –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏
‚ú® 500 –±–æ–Ω—É—Å–Ω—ã—Ö –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–µ—Ç
‚ú® –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º

**üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:** "–í–ª–∞–¥–µ–ª–µ—Ü –ø–æ–ª–Ω–æ–≥–æ –∫—É—Ä—Å–∞"

**üì± –ö–∞–∫ –Ω–∞—á–∞—Ç—å:**
–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–æ—Ç–µ! 
–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /menu –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø–æ–ª–Ω–æ–º—É –∫—É—Ä—Å—É.

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏—Ö –º–µ–¥–∏—Ç–∞—Ü–∏—é! üßò‚Äç‚ôÄÔ∏è‚ú®

---
*–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è. –í —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–º—É –∫—É—Ä—Å—É.*
"""
    
    await message.answer_photo(
        photo=random.choice(success_images),
        caption=success_text,
        parse_mode="Markdown"
    )